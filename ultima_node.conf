net {
  type = mainnet
}

storage {
  # Directory for storing persistent data
  db.version = 2,
  db.engine = "ROCKSDB",
  db.directory = "database",
  index.directory = "index",
  transHistory.switch = "on"

  # You can custom these 14 databases' configs:

  # account, account-index, asset-issue, block, block-index,
  # block_KDB, peers, properties, recent-block, trans,
  # utxo, votes, witness, witness_schedule.

  # Otherwise, db configs will remain defualt and data will be stored in
  # the path of "output-directory" or which is set by "-d" ("--output-directory").

  # Attention: name is a required field that must be set !!!
  properties = [
    //    {
    //      name = "account",
    //      path = "storage_directory_test",
    //      createIfMissing = true,
    //      paranoidChecks = true,
    //      verifyChecksums = true,
    //      compressionType = 1,        // compressed with snappy
    //      blockSize = 4096,           // 4  KB =         4 * 1024 B
    //      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
    //      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
    //      maxOpenFiles = 100
    //    },
    //    {
    //      name = "account-index",
    //      path = "storage_directory_test",
    //      createIfMissing = true,
    //      paranoidChecks = true,
    //      verifyChecksums = true,
    //      compressionType = 1,        // compressed with snappy
    //      blockSize = 4096,           // 4  KB =         4 * 1024 B
    //      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
    //      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
    //      maxOpenFiles = 100
    //    },
  ]
    dbSettings = {
        levelNumber = 7
        //compactThreads = 32
        blocksize = 64  // n * KB
        maxBytesForLevelBase = 256  // n * MB
        maxBytesForLevelMultiplier = 10
        level0FileNumCompactionTrigger = 4
        targetFileSizeBase = 256  // n * MB
        targetFileSizeMultiplier = 1
      }

    needToUpdateAsset = true
}

# this part of config is used to node discovery.
node.discovery = {
  enable = true  # you should set this entry value with ture if you want your node can be discovered by other node.
  persist = true  # this entry is used to determined to whether storing the peers in the database or not.
  bind.ip = ""
  external.ip = null
}

# this part of config is used to set backup node for witness service.
node.backup {
  port = 20001
  priority = 8
  members = [
  ]
}

node {
  # trust node for solidity node
  # trustNode = "ip:port"
  trustNode = "127.0.0.1:21359"

  # expose extension api to public or not
  walletExtensionApi = true

  listen.port = 21350

  connection.timeout = 5

  tcpNettyWorkThreadNum = 0

  udpNettyWorkThreadNum = 1

  # Number of validate sign thread, default availableProcessors / 2
  # validateSignThreadNum = 16

  maxActiveNodes = 30

  maxActiveNodesWithSameIp = 100

  minParticipationRate = 0

  # check the peer data transfer ,disconnect factor
  disconnectNumberFactor = 0.4
  maxConnectNumberFactor = 0.8
  receiveTcpMinDataLength = 2048
  isOpenFullTcpDisconnect = true

  p2p {
    version = 20250109 # 11111: mainnet; 20180622: testnet; you can set other number when you deploy one private net, but the node must have the same number in some private net.
  }

  active = [
    # Active establish connection in any case
    # Sample entries:
    # "ip:port",
    # "ip:port"
  ]

  passive = [
    # Passive accept connection in any case
    # Sample entries:
    # "ip:port",
    # "ip:port"
  ]

  http {
    PBFTPort = 21356
    fullNodePort = 21357
    solidityPort = 21358
  }

  rpc {
    port = 21359

    # Number of gRPC thread, default availableProcessors / 2
    # thread = 16

    # The maximum number of concurrent calls permitted for each incoming connection
    # maxConcurrentCallsPerConnection =

    # The HTTP/2 flow control window, default 1MB
    # flowControlWindow =

    # Connection being idle for longer than which will be gracefully terminated
    maxConnectionIdleInMillis = 60000

    # Connection lasting longer than which will be gracefully terminated
    # maxConnectionAgeInMillis =

    # The maximum message size allowed to be received on the server, default 4MB
    # maxMessageSize =

    # The maximum size of header list allowed to be received, default 8192
    # maxHeaderListSize =

    # Transactions can only be broadcast if the number of effective connections is reached.
    minEffectiveConnection = 0
  }

  blockProducedTimeOut = 100

}

seed.node = {
  # List of the seed nodes. This is used to enable the node can connect when join one net at first.
  # If you deploy one private net, you must add some "ip:port" here for other node connecting.
  # Seed nodes are stable full nodes, and the first SuperNode must be inclued in.
  # example:
  # ip.list = [
  #   "ip:port",
  #   "ip:port"
  # ]
   ip.list = ["16.170.145.142:21350", "13.61.114.95:21350"]
}

genesis.block = {
  # Reserve balance
  assets = [
    {
        accountName = "Heaven"
        accountType = "AssetIssue"
        address = "UULSvDAeKYkVctZ1bjwsMi2DSH22f796cz"
        balance = "100000000000"
    },
    {
      accountName = "Limbo"
      accountType = "AssetIssue"
      address = "UfkSAyukivtF6vsMZzKu3Jv3Qp9Zw5ApzS"
      balance = "0"
    },
    {
      accountName = "Hell"
      accountType = "AssetIssue"
      address = "Ubbwib7chyrMDC9P1KUB8dNFB1y43RSJip"
      balance = "-9223372036854775808"
    }
  ]

  witnesses = [
    {
      address: UXn2HD3tLrDaYJKuQtqKzqXwqVqG1SEnt7,
      url = "https://w1.ultima.io",
      voteCount = 100000026
    },
    {
      address: UWaRuMkX5UxzKQhQ5Va6zik126r6kzrE9M,
      url = "https://w2.ultima.io",
      voteCount = 100000025
    },
    {
      address: UdsR85kdMtnHfxSzkrfMDGX7YymufJv4p1,
      url = "https://w3.ultima.io",
      voteCount = 100000024
    },
    {
      address: UX3CWBNpAUtGQwkoEkBpbXt4KUPjnCg3aw,
      url = "https://w4.ultima.io",
      voteCount = 100000023
    },
    {
      address: Ughb3KfvaUK3SicAxN1CmYgUXDJiquUCm6,
      url = "https://w5.ultima.io",
      voteCount = 100000022
    },
    {
      address: UiFCX4NY9eadMasaTGgzDUqq91NSrcj8B7,
      url = "https://w6.ultima.io",
      voteCount = 100000021
    },
    {
      address: UWpB5Rbb6Em1QgPyC2XehqUjPXupde5kXq,
      url = "https://w7.ultima.io",
      voteCount = 100000020
    },
    {
      address: UdNLUQmbYcZmqvHgaC92wrUkPKViTi1rxe,
      url = "https://w8.ultima.io",
      voteCount = 100000019
    },
    {
      address: UPG7z3xsjicNx5FkN6o8KLAc4YYKuqNqun,
      url = "https://w9.ultima.io",
      voteCount = 100000018
    },
    {
      address: UgK4bZg2DYEMWBZqZrL4zc3wcNzZ59U3px,
      url = "https://w10.ultima.io",
      voteCount = 100000017
    },
    {
      address: UmAvT6S1Tu5TRPtCzABHBEx5KzrcpK5VTp,
      url = "https://w11.ultima.io",
      voteCount = 100000016
    },
    {
      address: Uk6Tz2EbFYCHbrTzqCBcW1XiKRryyyPubG,
      url = "https://w12.ultima.io",
      voteCount = 100000015
    },
    {
      address: UNW24B7wWTJrjyFjTUQFfinBktJRj51Epj,
      url = "https://w13.ultima.io",
      voteCount = 100000014
    },
    {
      address: UZFDXTgwB4NAcDuVcGUPTX2kNwgXWDHPiw,
      url = "https://w14.ultima.io",
      voteCount = 100000013
    },
    {
      address: UQbga219HNgLWHYjzU6x9pt8NkTg5u2Ksk,
      url = "https://w15.ultima.io",
      voteCount = 100000012
    },
    {
      address: URsxfT8CS8YYJr6K4c4rypp73hJn2U8Wh6,
      url = "https://w16.ultima.io",
      voteCount = 100000011
    },
    {
      address: UVVFpXfDxfZW3G99gaRhi2Vq6NAmr3HtFn,
      url = "https://w17.ultima.io",
      voteCount = 100000010
    },
    {
      address: UdUGtMfzd29rgwR6C6HCFvvrn8EMNwPRjp,
      url = "https://w18.ultima.io",
      voteCount = 100000009
    },
        {
      address: USvQQYtdQ7Ppem9KMGVCLH9kpdeuN7Rcqo,
      url = "https://w19.ultima.io",
      voteCount = 100000008
    },
        {
      address: UXN9Dr26qy5QdDtQ9DfQ3XVxf545QXdpbq,
      url = "https://w20.ultima.io",
      voteCount = 100000007
    },
    {
      address: Ua1UZR4DXxUyoZxkqL97bC3Y51ZY5DcF4X,
      url = "https://w21.ultima.io",
      voteCount = 100000006
    },
    {
      address: UdRANgSRbDgtESJESKU1NVexqQevWoW8Yk,
      url = "https://w22.ultima.io",
      voteCount = 100000005
    },
        {
      address: UW3jwCyXnQSCWwpw6xxBbwjnjCzBYhZ5FM,
      url = "https://w23.ultima.io",
      voteCount = 100000004
    },
    {
      address: UZb4CQF8Vq8v4r5Gjz5upFPJyLiLqNmqzS,
      url = "https://w24.ultima.io",
      voteCount = 100000003
    },
    {
      address: UXfeKhdgYnY9Di3Qkt38eejPcE18g1PYDF,
      url = "https://w25.ultima.io",
      voteCount = 100000002
    },
    {
      address: UfikTHao8vaLxZSrjCc2mxMKv4h8rSUrwL,
      url = "https://w26.ultima.io",
      voteCount = 100000001
    },
    {
      address: UaskqquNHJauGjunK8px4dE9J86T9iBc5S,
      url = "https://w27.ultima.io",
      voteCount = 100000000
    }
  ]

  timestamp = "1736250000000" #2025-01-07 11:40:00

  parentHash = "b9c9974b50da08d3f84af3db90959de297a9aaca91bc1fb2af6b412c8bebc511"
}

localwitness = [
    
]

#localwitnesskeystore = [
#  "src/main/resources/localwitnesskeystore.json"  # if you do not set the localwitness above, you must set this value.Otherwise,your SuperNode can not produce the block. 
#]

block = {
  needSyncCheck = true # first node : false, other : true
  maintenanceTimeInterval = 21600000 // 1 day: 86400000(ms), 6 hours: 21600000(ms)
  proposalExpireTime = 86400000 // 3 days: 259200000, 1 day: 86400000
}

trx.expiration.timeInMilliseconds = 60000

energy.limit.block.num = 422541
energy.limit.update.block.num = 1144938

vm = {
  supportConstant = true
  minTimeRatio = 0.0
  maxTimeRatio = 5.0
  saveInternalTx = false
}

committee = {
  allowCreationOfContracts = 1  //mainnet:0 (reset by committee),test:1
  allowSameTokenName = 1
  allowTvmTransferTrc10 = 1
  allowTvmConstantinople = 1
  allowTvmLondon = 1
  allowTvmSolidity059 = 1
  allowTvmIstanbul = 1
}

event.subscribe = {
  native = {
    useNativeQueue = true // if true, use native message queue, else use event plugin.
    bindport = 5555 // bind port
    sendqueuelength = 1000 //max length of send queue
  }

  path = "" // absolute path of plugin
  server = "" // target server address to receive event triggers
  dbconfig = "" // dbname|username|password
  contractParse = true,
  topics = [
    {
      triggerName = "block" // block trigger, the value can't be modified
      enable = false
      topic = "block" // plugin topic, the value could be modified
    },
    {
      triggerName = "transaction"
      enable = false
      topic = "transaction"
    },
    {
      triggerName = "contractevent"
      enable = false
      topic = "contractevent"
    },
    {
      triggerName = "contractlog"
      enable = false
      topic = "contractlog"
    },
    {
      triggerName = "solidity" // solidity block event trigger, the value can't be modified
      enable = true            // the default value is true
      topic = "solidity"
    }
  ]

  filter = {
    fromblock = "" // the value could be "", "earliest" or a specified block number as the beginning of the queried range
    toblock = "" // the value could be "", "latest" or a specified block number as end of the queried range
    contractAddress = [
      "" // contract address you want to subscribe, if it's set to "", you will receive contract logs/events with any contract address.
    ]

    contractTopic = [
      "" // contract topic you want to subscribe, if it's set to "", you will receive contract logs/events with any contract topic.
    ]
  }
}
